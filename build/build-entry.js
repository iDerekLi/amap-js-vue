const fs = require('fs-extra');
const path = require('path');
const uppercamelize = require('uppercamelcase');
const Components = require('./get-components')();
const packageJson = require('../package.json');

const output = path.join(__dirname, '../src/index.js');
const version = process.env.VERSION || packageJson.version;
const tips = '// This file is auto generated by build/build-entry.js';

function buildEntry() {
  const uninstallComponents = ['Locale', 'Lazyload', 'Waterfall'];

  const importList = Components.map(name => `import ${uppercamelize(name)} from './${name}';`);
  const exportList = Components.map(name => `${uppercamelize(name)}`);
  const installList = exportList.filter(name => !~uninstallComponents.indexOf(uppercamelize(name)));
  const content = `${tips}
${importList.join('\n')}
import config from './config';
import createComponent from './utils/createComponent';

const version = '${version}';

const components = [${installList.join(', ')}];

const install = function install(Vue, opts = {}) {
  if (install.installed) return;

  components.forEach(component => {
    Vue.component(component.name, component);
  });

  config(opts || {});
};

// auto install
if (typeof window !== 'undefined' && window.Vue) {
  install(window.Vue);
}

export { install, version, config, createComponent, ${exportList.join(', ')} };

export default {
  install,
  version,
  config,
  createComponent,
};
`;

  fs.writeFileSync(output, content);
}

buildEntry();
